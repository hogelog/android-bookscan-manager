buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.1'
        classpath 'com.deploygate:gradle:0.6'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'deploygate'

repositories {
    jcenter()
}

def revisionHash = ["sh",  "-c",  "cd ${project.rootDir} ; git rev-parse --short HEAD"].execute().in.text.trim()

def releaseSigningProperties = "${System.env["HOME"]}/.gradle/signing/release.properties"

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 19
        versionCode 1001
        versionName "0.0.1-${revisionHash}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            if (new File(releaseSigningProperties).exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(file(releaseSigningProperties)))
                storeFile file(props['STORE_FILE'])
                storePassword props['STORE_PASSWORD']
                keyAlias props['KEY_ALIAS']
                keyPassword props['KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:19.1.0'
    compile('org.hogel:bookscan-client:0.0.5') {
        exclude module: 'httpclient'
    }
    compile 'org.roboguice:roboguice:2.0'
    compile 'com.google.guava:guava:17.0'
    compile 'org.slf4j:slf4j-android:1.7.7'
    compile 'org.jsoup:jsoup:1.7.3'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'net.arnx:jsonic:1.3.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.squareup.picasso:picasso:2.3.2'

    provided 'org.projectlombok:lombok:1.12.6'
}

deploygate {
  userName = getProperty("DEPLOYGATE_USER", "")
  token = getProperty("DEPLOYGATE_TOKEN", "")

  apks {
    debug {
      sourceFile = file("${project.buildDir}/outputs/apk/bookscan-manager-debug-unaligned.apk")
    }
  }
}

uploadDeployGateDebug.dependsOn assembleDebug

String getProperty(String propertyName, String defaultValue) {
    hasProperty(propertyName) ? getProperty(propertyName) : defaultValue
}
